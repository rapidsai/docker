# Copyright (c) 2025, NVIDIA CORPORATION.
name: Validate images

on:
  workflow_call:
    inputs:
      ARCH:
        required: true
        type: string
      CONTAINER_CANARY_VERSION:
        description: 'tag from https://github.com/NVIDIA/container-canary/releases'
        required: true
        type: string
      CUDA_VER:
        required: true
        type: string
      DRIVER:
        required: true
        type: string
      GPU:
        required: true
        type: string
      PYTHON_VER:
        required: true
        type: string
      BASE_TAG:
        required: true
        type: string
      NOTEBOOKS_TAG:
        required: true
        type: string

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: none
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  validate:
    strategy:
      matrix:
        ARCH: ["${{ inputs.ARCH }}"]
        CUDA_VER: ["${{ inputs.CUDA_VER }}"]
        PYTHON_VER: ["${{ inputs.PYTHON_VER }}"]
        GPU: ["${{ inputs.GPU }}"]
        DRIVER: ["${{ inputs.DRIVER }}"]
      fail-fast: false
    # Referencing something from the 'matrix' context prevents GitHub auto-generating
    # a hard-to-read name with all the matrix input values.
    #
    # The 'name:' in this file also becomes the name in the left-hand navigation list
    # on the 'Summary' page, so should be more specific than the one in the calling workflow.
    name: validate (${{ matrix.CUDA_VER }}, py${{ matrix.PYTHON_VER }}, ${{ matrix.ARCH }}, ${{ matrix.GPU}}, ${{ matrix.DRIVER }})
    runs-on: "linux-${{ inputs.ARCH }}-cpu4"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.GPUCIBOT_DOCKERHUB_USER }}
          password: ${{ secrets.GPUCIBOT_DOCKERHUB_TOKEN }}
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Install container-canary
        run: |
          GOBIN=/tmp/canary-bin go install github.com/nvidia/container-canary@${{ inputs.CONTAINER_CANARY_VERSION }}
          /tmp/canary-bin/container-canary version
      - name: (base) container-canary checks
        run: |
          export PATH="/tmp/canary-bin:${PATH}"
          ./ci/run-validation-checks.sh \
            --dask-scheduler \
            ${{ inputs.BASE_TAG }}
      - name: (notebooks) container-canary checks
        run: |
          export PATH="/tmp/canary-bin:${PATH}"
          ./ci/run-validation-checks.sh \
            --dask-scheduler \
            --notebooks \
            ${{ inputs.NOTEBOOKS_TAG }}
